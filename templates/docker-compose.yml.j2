#jinja2:lstrip_blocks: True
---
version: '3'
services:
{% if elk_deploy_elasticsearch %}
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:{{ elk_version }}
    restart: unless-stopped
    container_name: elasticsearch
    environment:
      - node.name={{ inventory_hostname }}
      - cluster.name=es-docker-cluster
      {% if elk_cluster %}
      - discovery.seed_hosts={{ elk_seed_hosts }}
      - cluster.initial_master_nodes={{ elk_master_hosts }}
      - network.publish_host={{ ansible_default_ipv4.address }}
      {% else %}
      - discovery.type=single-node
      {% endif %}
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms{{ elk_elastic_memory }} -Xmx{{ elk_elastic_memory }} -Dlog4j2.formatMsgNoLookups=true"
      - TZ=Europe/Vienna
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "{{ elk_data_dir }}/elasticsearch:/usr/share/elasticsearch/data"
    networks:
      - elastic
    ports:
      - {{ elk_listen_ip }}:9200:9200
      {% if elk_cluster %}
      - {{ elk_listen_ip}}:9300:9300
      {% endif %}
{% endif %}
{% if elk_deploy_logstash %}
  logstash:
    image: docker.elastic.co/logstash/logstash:{{ elk_version }}
    restart: unless-stopped
    container_name: logstash
    environment:
      - "LS_JAVA_OPTS=-Dlog4j2.formatMsgNoLookups=true"
      - TZ=Europe/Vienna
    volumes:
      - "{{ elk_data_dir }}/logstash/cert:/usr/share/logstash/cert"
      - "{{ elk_data_dir }}/logstash/pipeline:/usr/share/logstash/pipeline"
      - "{{ elk_data_dir }}/logstash/patterns:/usr/share/logstash/patterns"
      - "{{ elk_data_dir }}/logstash/index_management:/usr/share/logstash/index_management"
      - "{{ elk_data_dir }}/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml"
    ports:
{% for _port in elk_logstash_ports %}
      - {{ elk_listen_ip}}:{{ _port }}:{{ _port }}
{% endfor %}
    networks:
      - elastic
    command: --config.reload.automatic
    depends_on:
      - elasticsearch
{% endif %}
{% if elk_deploy_kibana %}
  kibana:
    image: docker.elastic.co/kibana/kibana:{{ elk_version }}
    restart: unless-stopped
    container_name: kibana
    ports:
      - {{ elk_listen_ip}}:5601:5601
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - KIBANA_AUTOCOMPLETETERMINATEAFTER=5000000
      - TZ=Europe/Vienna
    networks:
      - elastic
    depends_on:
      - elasticsearch
{% endif %}
{% if elk_deploy_cerebro %}
  cerebro:
    image: lmenezes/cerebro
    restart: unless-stopped
    container_name: cerebro
    ports:
      - {{ elk_listen_ip}}:9000:9000
    networks:
      - elastic
{% endif %}
{% if elk_deploy_elastalert %}
  elastalert:
    image: bitsensor/elastalert:3.0.0-beta.1
    restart: unless-stopped
    container_name: elastalert
    ports:
      - {{ elk_listen_ip}}:2030:3030
    volumes:
      - "{{ elk_data_dir }}/elastalert/elastalert.yaml:/opt/elastalert/config.yaml"
      - "{{ elk_data_dir }}/elastalert/elastalert.yaml:/opt/elastalert-server/config/elastalert.yaml"
      - "{{ elk_data_dir }}/elastalert/config.json:/opt/elastalert-server/config/config.json"
      - "{{ elk_data_dir }}/elastalert/rules:/opt/elastalert/rules"
    networks:
      - elastic
    depends_on:
      - elasticsearch
    environment:
      - TZ=Europe/Vienna
{% endif %}
networks:
  elastic:
